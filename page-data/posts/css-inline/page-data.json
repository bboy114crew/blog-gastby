{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/css-inline/","webpackCompilationHash":"71a5ccf932115429c189","result":{"data":{"markdownRemark":{"id":"d935fa81-792e-55eb-b2e7-f824776220c7","html":"<h3 id=\"keep-in-mind\"><a href=\"#keep-in-mind\" aria-label=\"keep in mind permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Keep in mind</h3>\n<p> If you inline a large amount of CSS, it delays the transmission of the rest of the HTML document. If everything is prioritized then nothing is. Inlining also has some downsides in that it prevents the browser from caching the CSS for reuse on subsequent page loads, so itâ€™s best to use it sparingly.</p>\n<h2 id=\"reference\"><a href=\"#reference\" aria-label=\"reference permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reference:</h2>\n<p><a href=\"https://web.dev/extract-critical-css/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Extract critical CSS</a> <br/>\n<a href=\"https://developers.google.com/web/fundamentals/performance/critical-rendering-path/render-blocking-css\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Render Blocking CSS</a> <br/>\n<a href=\"https://esbench.com/bench/5908f78199634800a0347e94\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">The approach is less performant than CSS classes</a> <br/></p>","fields":{"slug":"/posts/css-inline/","tagSlugs":["/tag/note/"]},"frontmatter":{"date":"2019-12-20","description":"CSS Explained 101.","tags":["Note"],"title":"CSS Inline","socialImage":null}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/css-inline/"}}}